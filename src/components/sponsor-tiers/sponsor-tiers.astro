---
import { Title } from "../typography/title";
import Ribbon from "./ribbon.astro";

interface SponsorTierProps {
  title: string;
  totalSlots?: number | null | string;
  price: number | string;
  features: string[];
}

const tiers: SponsorTierProps[] = [
  {
    title: "Keystone",
    totalSlots: 1,
    price: "Please ask",
    features: [
      "Keynote (plenary) room named after your company",
      "Central sizable booth in exhibit hall",
      "12 complimentary session passes",
      "Logo on room lecterns, banners, videos, website, signage",
      "Blog post on conference website",
      "Access to recruiting session",
      "1 sponsored workshop (3 hours)",
      "1 sponsored talk (30 minutes)",
      "Private organisers support",
      "And more!",
    ],
  },
  {
    title: "Diamond",
    totalSlots: 2,
    price: undefined,
    features: [
      "30 sqm booth in exhibit hall",
      "8 complimentary session passes",
      "Logo on room lecterns, banners, videos, website, signage",
      "Blog post on conference website",
      "Access to recruiting session",
      "1 sponsored talk (30 minutes)",
      "And more!",
    ],
  },
  {
    title: "Platinum",
    totalSlots: 3,
    price: undefined,
    features: [
      "16 sqm booth in exhibit hall",
      "6 complimentary session passes",
      "Logo on banners, videos, website, signage",
      "PDF brochure on virtual swag webpage",
      "Access to recruiting session",
      "1 sponsored talk (30 minutes)",
      "And more!",
    ],
  },
  {
    title: "Platinum X",
    totalSlots: 3,
    price: undefined,
    features: [
      "6 complimentary session passes",
      "Logo on banners, videos, website, signage",
      "PDF brochure on virtual swag webpage",
      "Access to recruiting session",
      "1 sponsored talk (30 minutes)",
      "And more!",
    ],
  },
  {
    title: "Gold",
    price: undefined,
    totalSlots: "limited",
    features: [
      "9 sqm booth in exhibit hall",
      "3 complimentary session passes",
      "Logo on banners, videos, website, signage",
      "PDF brochure on virtual swag webpage",
      "Access to recruiting session",
      "And more!",
    ],
  },
  {
    title: "Gold X",
    price: undefined,
    totalSlots: "limited",
    features: [
      "3 complimentary session passes",
      "Logo on banners, videos, website, signage",
      "PDF brochure on virtual swag webpage",
      "Access to recruiting session",
      "And more!",
    ],
  },
  {
    title: "Silver",
    price: undefined,
    totalSlots: "limited",
    features: [
      "6 sqm booth in exhibit hall",
      "2 complimentary session passes",
      "Logo on website, signage",
      "And more!",
    ],
  },
  {
    title: "Bronze",
    price: undefined,
    totalSlots: "unlimited",
    features: ["Logo & recruiting ad on EuroPython website and more!"],
  },
  {
    title: "Patron",
    price: undefined,
    totalSlots: "unlimited",
    features: ["Logo on EuroPython website, welcome tweet and more!"],
  },
];

const getRibbonClass = (title: string) => {
  const classes = {
    Keystone: "text-sponsor-keystone",
    Diamond: "text-sponsor-diamond",
    Platinum: "text-sponsor-platinum",
    "Platinum X": "text-sponsor-platinum",
    Gold: "text-sponsor-gold",
    "Gold X": "text-sponsor-gold",

    Silver: "text-sponsor-silver",
    Bronze: "text-sponsor-bronze",
    Patron: "text-sponsor-patron",
  };
  return classes[title as keyof typeof classes] || "";
};

const formatPrice = (price: number | string) => {
  if (typeof price === "string") return price;
  return new Intl.NumberFormat("en", {
    style: "currency",
    currency: "EUR",
    maximumFractionDigits: 0,
    minimumFractionDigits: 0,
  }).format(price);
};
---

<div class="grid grid-cols-1 sm:grid-cols-2 gap-10">
  {
    tiers.map((tier) => (
      <div class="bg-white text-black rounded-2xl p-6 relative not-prose z-0">
        <div class="h-[160px]">
          <Ribbon
            className={`absolute -right-6 -top-8 ${getRibbonClass(tier.title)}`}
            style={{ zIndex: "-1" }}
          />

          <Title level={3} className="mt-0 !mb-2">
            {tier.title}
          </Title>

          <div class="font-bold text-3xl">{formatPrice(tier.price)}</div>
          <div class="text-xl">
            {tier.totalSlots ? (
              <>
                <span>{tier.totalSlots}</span> slot{tier.totalSlots == 1 ? "" : "s"}{" "}
                available
              </>
            ) : (
              <>No slot available</>
            )}
          </div>
        </div>

        <p class="font-bold text-base">This tier includes:</p>
        <ul class="text-base">
          {tier.features.map((feature) => (
            <li>✔️ {feature}</li>
          ))}
        </ul>
      </div>
    ))
  }
</div>
